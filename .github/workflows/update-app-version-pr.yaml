name: update-app-version-pr

# on merge to main from pull request (recommended)
on:
  pull_request:
    types: [opened, reopened]
    branches:
      - main
    paths:
      - 'src/**'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  CLUSTER_NAME: 'k8s-demo-cluster'
  GCP_REGION: 'us-east5'
  GCP_ZONE: 'us-east5-b'
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build-push-app:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./src
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}

      - name: Install Loft CLI
        uses: loft-sh/setup-loft@v2
        with:
          version: v3.2.4
          url: ${{ secrets.LOFT_URL }}
          # Specify your Loft access key here
          access-key: ${{ secrets.LOFT_PREVIEW_ACCESS_KEY }}

      - name: Create Preview vcluster
        run: |
          loft create vcluster $REPO_NAME-pr-${{ github.event.pull_request.number }} --project preview --recreate
          kubectl create ns preview-$REPO_NAME
          kubectl apply -n preview-$REPO_NAME -f argocd/ghcr-login-secret.yaml --validate=false

      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ github.event.pull_request.number }}
          header: release
          message: |
            Preview environment deployed at: https://${{ env.REPO_NAME}}-pr-${{ github.event.pull_request.number }}.previews.k8s.kurtmadel.com
          
